package ${package.Controller};

import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * ${table.comment}  前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("/${table.entityPath}")
#if(${superControllerClass})
public class ${table.controllerName} extends${superControllerClass}<${cfg.providerClass}> {
#else
public class ${table.controllerName} {
#end
public String getService(){
        return"${table.entityPath}Service";
        }

@ApiOperation(value = "查询${table.comment}")
@RequiresPermissions("name:view")
@GetMapping
public Object query(ModelMap modelMap,
                @ApiParam(required = false, value = "起始页") @RequestParam(defaultValue = "1", value = "current") String current,
                @ApiParam(required = false, value = "查询页数") @RequestParam(defaultValue = "20", value = "size") String size,
                @ApiParam(required = false, value = "需要排序字段") @RequestParam(defaultValue = "id", value = "orderBy") String orderBy,
                @ApiParam(required = false, value = "查询关键字") @RequestParam(value = "keyword", required = false) String keyword){
        return super.query(modelMap,param);
        }

@ApiOperation(value = "${table.comment}详情")
@RequiresPermissions("name:view")
@GetMapping("/{id}")
public Object get(ModelMap modelMap, @PathVariable Long id){
        return super.get(modelMap,id);
        }

@PostMapping
@ApiOperation(value = "新增${table.comment}")
@RequiresPermissions("name:create")
public Object update(ModelMap modelMap, ${entity} param){
        return super.update(modelMap,param);
        }

@PutMapping
@ApiOperation(value = "修改${table.comment}")
@RequiresPermissions("name:update")
public Object update(ModelMap modelMap, ${entity} param){
        return super.update(modelMap,param);
        }

@DeleteMapping
@ApiOperation(value = "删除${table.comment}")
@RequiresPermissions("name:remove")
public Object delete(ModelMap modelMap, @PathVariable Long id){
        return super.delete(modelMap,id);
        }
        }